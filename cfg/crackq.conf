#CrackQ config file, enter wordlist locations and other file locations here
#Provide full filepaths for all files
[rules]
best64: /var/crackq/files/rules/best64.rule
combinator: /var/crackq/files/rules/combinator.rule
d3ad0ne: /var/crackq/files/rules/d3ad0ne.rule
dive: /var/crackq/files/rules/dive.rule
generated2: /var/crackq/files/rules/generated2.rule
generated: /var/crackq/files/rules/generated.rule
hybrid: /var/crackq/files/rules/hybrid
Incisive-leetspeak: /var/crackq/files/rules/Incisive-leetspeak.rule
InsidePro-HashManager: /var/crackq/files/rules/InsidePro-HashManager.rule
InsidePro-PasswordsPro: /var/crackq/files/rules/InsidePro-PasswordsPro.rule
leetspeak: /var/crackq/files/rules/leetspeak.rule
oscommerce: /var/crackq/files/rules/oscommerce.rule
rockyou-30000: /var/crackq/files/rules/rockyou-30000.rule
specific: /var/crackq/files/rules/specific.rule
T0XlC-insert_00-99_1950-2050_toprules_0_F: /var/crackq/files/rules/T0XlC-insert_00-99_1950-2050_toprules_0_F.rule
T0XlC-insert_space_and_special_0_F: /var/crackq/files/rules/T0XlC-insert_space_and_special_0_F.rule
T0XlC-insert_top_100_passwords_1_G: /var/crackq/files/rules/T0XlC-insert_top_100_passwords_1_G.rule
T0XlC: /var/crackq/files/rules/T0XlC.rule
T0XlCv1: /var/crackq/files/rules/T0XlCv1.rule
toggles1: /var/crackq/files/rules/toggles1.rule
toggles2: /var/crackq/files/rules/toggles2.rule
toggles3: /var/crackq/files/rules/toggles3.rule
toggles4: /var/crackq/files/rules/toggles4.rule
toggles5: /var/crackq/files/rules/toggles5.rule
unix-ninja-leetspeak: /var/crackq/files/rules/unix-ninja-leetspeak.rule

[masks]
Hashes_org: /var/crackq/files/masks/hashes.org.masks.4hours
Hashes_org_adpolicy_4hours: /var/crackq/files/masks/hashes.org.ad_policy.4hour.masks
korelogic_pathwell100: /var/crackq/files/masks/korelogic_pathwell100.masks

[wordlists]
rockyou: /var/crackq/files/rockyou.txt.gz

[files]
#Set the permissions correctly on this directory, this is where the sensitive data will go
log_dir: /var/crackq/logs/ 
file_dir: /var/crackq/files/

[redis]
host: redis 
port: 6379
#password: secret

[app]
#Flask application settings, see: https://flask.palletsprojects.com/en/1.1.x/config for full list.
SESSION_TYPE: sqlalchemy
SQLALCHEMY_DATABASE_URI: sqlite:////var/crackq/files/crackqdb.sqlite
SESSION_COOKIE_HTTPONLY: True
SESSION_COOKIE_SECURE: True
PERMANENT_SESSION_LIFETIME: 1800
SESSION_PERMANENT: True
#Change this for every install!!
# use the following command to generate a scure key:
# python3 -c 'import secrets; print(secrets.token_urlsafe())'
SECRET_KEY: dhsnu3r2788hsnjGDhbjfdio190243ifnchDGhjsdkfdasfhj3jhbhj$53f2q4b3hjb


[auth]
#Type can be either 'ldap', 'saml2 or sql'

type: sql

#type: ldap
#Location of LDAP server, supply 'ldaps://xxx.com' for encrypted coms
#default uses toy OpenLDAP server docker image, this has not been secured/modified from the default container image
#ldap_server: ldap://ldap.crackq.org
#ldap_base = dc=example,dc=org
#ldap_group: CrackQ Users 

#type: saml2
#For SAML2 3 configuration options are required:
#-saml_manifest: a URL which can be provided by the IDP server admins
#-meta_file: the location to store this locally
#-entity_id: the entity ID to send to the IDP server (usually hostname/url)

##Example Okta SAML2 manifest file
#saml_manifest: http://idp.oktadev.com/metadata
#meta_file = /var/crackq/files/saml/idp_meta_file.xml
#entity_id = https://crackq.xxx.com

##Example location of Windows SAML2 manifest file
#saml_manifest: https://sso.xxx.com/FederationMetadata/2007-06/FederationMetadata.xml
#meta_file = /var/crackq/files/saml/idp_meta_file.xml
#entity_id = https://crackq.xxx.com

##Require user group membersip. Commet this out to allow all authenticated users access. THIS IS CASE SENSITIVE
#group = domain\Domain Users

## Set the location of the priv key and cert to be used for saml auth
## if required. Comment these out to skip signing auth requests. Most implementations
## don't sign requests, just the responses.
#sp_cert_file = /var/crackq/files/saml/certificate.pem
#sp_key_file = /var/crackq/files/saml/private.key

[reports]
#Directory to store reports
dir: /var/crackq/logs/reports/
#Top N number of entries in the analysis default is top 10
topx: 10

[notify]
#Settings for sending out notifications on job status
mail_server: mail.xxx.com
mail_port: 25
src: crackq@xxx.com
#Time since last user activity to start sending event notifications (email/sms etc.) in minutes
inactive_time: 20
tls: True

[jobtimeout]
# 3 weeks default
Value: 1814400
Modify: True

[misc]
#Maximum requeue attempts on failed job (only automatically retried jobs that failed due to system error, not user error)
req_max: 2
#Set the minimum number of cracked passwords required to generate a report
min_report: 100
#Allow hashcat warning messages (may contain system filepaths and other info) to be returned to app users
user_warnings: False
#Set the GPU temperature threshold to abort hashcat jobs
hwmon_temp_abort: 90
disable_brain: False
